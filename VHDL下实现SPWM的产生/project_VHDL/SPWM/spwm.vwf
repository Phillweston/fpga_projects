/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pwm_out2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sin_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sin_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("sin_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sin_out";
}

SIGNAL("tri_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tri_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

SIGNAL("tri_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tri_out";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2500;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("pwm_out2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 1.6;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 719.2;
		LEVEL 0 FOR 1138.4;
		LEVEL 1 FOR 1749.6;
		LEVEL 0 FOR 729.6;
		LEVEL 1 FOR 2124.8;
		LEVEL 0 FOR 388.0;
		LEVEL 1 FOR 2408.8;
		LEVEL 0 FOR 143.2;
		LEVEL 1 FOR 561.2;
	}
}

TRANSITION_LIST("sin_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("sin_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4470.0;
		LEVEL 1 FOR 5530.0;
	}
}

TRANSITION_LIST("sin_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2201.2;
		LEVEL 1 FOR 2268.8;
		LEVEL 0 FOR 2732.8;
		LEVEL 1 FOR 2797.2;
	}
}

TRANSITION_LIST("sin_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1118.8;
		LEVEL 1 FOR 1082.4;
		LEVEL 0 FOR 1083.2;
		LEVEL 1 FOR 1185.6;
		LEVEL 0 FOR 1288.8;
		LEVEL 1 FOR 1444.0;
		LEVEL 0 FOR 1804.8;
		LEVEL 1 FOR 992.4;
	}
}

TRANSITION_LIST("sin_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 602.8;
		LEVEL 1 FOR 516.0;
		LEVEL 0 FOR 515.2;
		LEVEL 1 FOR 567.2;
		LEVEL 0 FOR 516.0;
		LEVEL 1 FOR 567.2;
		LEVEL 0 FOR 567.2;
		LEVEL 1 FOR 618.4;
		LEVEL 0 FOR 619.2;
		LEVEL 1 FOR 669.6;
		LEVEL 0 FOR 670.4;
		LEVEL 1 FOR 773.6;
		LEVEL 0 FOR 824.8;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 992.4;
	}
}

TRANSITION_LIST("sin_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 345.2;
		LEVEL 1 FOR 257.6;
		LEVEL 0 FOR 258.4;
		LEVEL 1 FOR 257.6;
		LEVEL 0 FOR 257.6;
		LEVEL 1 FOR 257.6;
		LEVEL 0 FOR 258.4;
		LEVEL 1 FOR 308.8;
		LEVEL 0 FOR 258.4;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 257.6;
			LEVEL 0 FOR 309.6;
		}
		LEVEL 1 FOR 308.8;
		LEVEL 0 FOR 309.6;
		LEVEL 1 FOR 309.6;
		LEVEL 0 FOR 308.8;
		LEVEL 1 FOR 360.8;
		LEVEL 0 FOR 309.6;
		LEVEL 1 FOR 360.8;
		LEVEL 0 FOR 361.6;
		LEVEL 1 FOR 412.0;
		LEVEL 0 FOR 412.8;
		LEVEL 1 FOR 412.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 516.0;
		LEVEL 0 FOR 618.4;
		LEVEL 1 FOR 374.0;
	}
}

TRANSITION_LIST("sin_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 154.4;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 205.6;
		LEVEL 0 FOR 155.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 154.4;
			LEVEL 0 FOR 206.4;
		}
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 205.6;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 206.4;
			LEVEL 0 FOR 206.4;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 205.6;
			LEVEL 0 FOR 258.4;
		}
		LEVEL 1 FOR 257.6;
		LEVEL 0 FOR 309.6;
		LEVEL 1 FOR 308.8;
		LEVEL 0 FOR 309.6;
		LEVEL 1 FOR 64.4;
	}
}

TRANSITION_LIST("sin_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.8;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 102.4;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 51.2;
		}
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 102.4;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 51.2;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 51.2;
		}
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 102.4;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 103.2;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 102.4;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 155.2;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 154.4;
		}
		LEVEL 1 FOR 155.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 64.4;
	}
}

TRANSITION_LIST("sin_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 87.6;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 154.4;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 102.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 103.2;
		}
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 103.2;
		}
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 102.4;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 103.2;
		}
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 52.0;
			LEVEL 1 FOR 51.2;
		}
		LEVEL 0 FOR 103.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 51.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 52.0;
		}
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 52.0;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 51.2;
		}
		LEVEL 0 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 51.2;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 64.4;
	}
}

TRANSITION_LIST("sin_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 87.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 51.2;
				LEVEL 1 FOR 52.0;
			}
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 52.0;
		}
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 52.0;
		}
		LEVEL 1 FOR 51.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 52.0;
		}
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 52.0;
		}
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 103.2;
			LEVEL 1 FOR 51.2;
		}
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 103.2;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 102.4;
		LEVEL 0 FOR 155.2;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 154.4;
		LEVEL 0 FOR 206.4;
		LEVEL 1 FOR 206.4;
		LEVEL 0 FOR 360.8;
		LEVEL 1 FOR 722.4;
		LEVEL 0 FOR 308.8;
		LEVEL 1 FOR 257.6;
		LEVEL 0 FOR 155.2;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 154.4;
			LEVEL 0 FOR 103.2;
		}
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 102.4;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 103.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 103.2;
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 13.2;
	}
}

TRANSITION_LIST("tri_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 668.0;
		LEVEL 0 FOR 1336.0;
		LEVEL 1 FOR 1330.4;
		LEVEL 0 FOR 1336.0;
		LEVEL 1 FOR 1331.2;
		LEVEL 0 FOR 1335.2;
		LEVEL 1 FOR 1331.2;
		LEVEL 0 FOR 1298.0;
	}
}

TRANSITION_LIST("tri_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 368.4;
		LEVEL 1 FOR 333.6;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 664.0;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 332.8;
		LEVEL 0 FOR 664.8;
		LEVEL 1 FOR 332.8;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 664.0;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 333.6;
		LEVEL 0 FOR 664.0;
		LEVEL 1 FOR 333.6;
		LEVEL 0 FOR 335.2;
		LEVEL 1 FOR 664.8;
		LEVEL 0 FOR 335.2;
		LEVEL 1 FOR 333.6;
		LEVEL 0 FOR 664.0;
		LEVEL 1 FOR 333.6;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 664.0;
		LEVEL 0 FOR 298.0;
	}
}

TRANSITION_LIST("tri_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 202.0;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 168.8;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 331.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 169.6;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 330.4;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 169.6;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 331.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 168.8;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 331.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 168.8;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 330.4;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 168.8;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 331.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 168.8;
		LEVEL 1 FOR 167.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 331.2;
		LEVEL 0 FOR 166.4;
		LEVEL 1 FOR 166.4;
		LEVEL 0 FOR 131.6;
	}
}

TRANSITION_LIST("tri_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 118.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 85.6;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 164.0;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 86.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 164.0;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83.2;
			LEVEL 1 FOR 83.2;
		}
		LEVEL 0 FOR 86.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 164.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83.2;
			LEVEL 1 FOR 83.2;
		}
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 85.6;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83.2;
			LEVEL 1 FOR 83.2;
		}
		LEVEL 0 FOR 164.0;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83.2;
			LEVEL 1 FOR 83.2;
		}
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 85.6;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 164.0;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 85.6;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83.2;
			LEVEL 1 FOR 83.2;
		}
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 164.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 83.2;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 85.6;
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 164.0;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83.2;
			LEVEL 0 FOR 83.2;
		}
		LEVEL 1 FOR 83.2;
		LEVEL 0 FOR 48.4;
	}
}

TRANSITION_LIST("tri_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 80.8;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 44.8;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 80.8;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 44.8;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 80.8;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 42.4;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 44.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 80.8;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 42.4;
		LEVEL 0 FOR 44.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 80.8;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 42.4;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 80.8;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 42.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 41.6;
			LEVEL 1 FOR 41.6;
		}
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 80.8;
		LEVEL 0 FOR 41.6;
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 42.4;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41.6;
			LEVEL 0 FOR 41.6;
		}
		LEVEL 1 FOR 41.6;
		LEVEL 0 FOR 6.8;
	}
}

TRANSITION_LIST("tri_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 56.4;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 23.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 39.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 39.2;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 23.2;
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 39.2;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 23.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 39.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 21.6;
		LEVEL 0 FOR 23.2;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 39.2;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 23.2;
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 39.2;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 23.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 21.6;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 20.8;
		LEVEL 1 FOR 39.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.8;
			LEVEL 1 FOR 20.8;
		}
		LEVEL 0 FOR 21.6;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.8;
			LEVEL 0 FOR 20.8;
		}
		LEVEL 1 FOR 6.8;
	}
}

TRANSITION_LIST("tri_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 46.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 12.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 21;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 18.4;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 13.6;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 18.4;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 12.8;
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 18.4;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 12.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 18.4;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 11.2;
		LEVEL 0 FOR 12.8;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 18.4;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 12.8;
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 10.4;
		LEVEL 0 FOR 18.4;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 12.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 11.2;
		NODE
		{
			REPEAT = 21;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 18.4;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 10.4;
			LEVEL 1 FOR 10.4;
		}
		LEVEL 0 FOR 11.2;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 10.4;
			LEVEL 0 FOR 10.4;
		}
		LEVEL 1 FOR 6.8;
	}
}

TRANSITION_LIST("tri_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.4;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 4.8;
			LEVEL 0 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 4.8;
			LEVEL 1 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 4.8;
			LEVEL 0 FOR 5.6;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 7.2;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.8;
			LEVEL 0 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 4.8;
			LEVEL 0 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 7.2;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 7.2;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 7.2;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 4.8;
			LEVEL 0 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 4.8;
			LEVEL 1 FOR 5.6;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 5.6;
			LEVEL 0 FOR 4.8;
		}
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 1.2;
	}
}

TRANSITION_LIST("tri_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 4.8;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 5.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 4.8;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 4.8;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 4.8;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 4.8;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 3.2;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 2.4;
		}
		LEVEL 1 FOR 1.2;
	}
}

TRANSITION_LIST("tri_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 666.4;
			LEVEL 1 FOR 1331.2;
			LEVEL 0 FOR 666.4;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 667.2;
		LEVEL 1 FOR 1330.4;
		LEVEL 0 FOR 667.2;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 666.4;
		LEVEL 1 FOR 1295.6;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pwm_out2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sin_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "tri_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 13;
}

TIME_BAR
{
	TIME = 19250;
	MASTER = TRUE;
}
;
