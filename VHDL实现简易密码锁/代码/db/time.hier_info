|time
motor_open <= control:inst.motor_open
clk => control:inst.clk
clk => bell:inst1.clk
clk => time_counter:inst6.clk
reset_n => control:inst.reset_n
reset_n => bell:inst1.reset_n
reset_n => time_counter:inst6.reset_n
set_key => control:inst.set_signal
start_key => control:inst.select_signal
pause_key => control:inst.ok_signal
set_ok_signal => control:inst.set_ok_signal
led_red <= control:inst.password_no
led_green <= control:inst.password_yes
pwm_out <= bell:inst1.pwm_out
password_set_out <= control:inst.password_set_out
seg_duan[0] <= time_counter:inst6.seg_duan[0]
seg_duan[1] <= time_counter:inst6.seg_duan[1]
seg_duan[2] <= time_counter:inst6.seg_duan[2]
seg_duan[3] <= time_counter:inst6.seg_duan[3]
seg_duan[4] <= time_counter:inst6.seg_duan[4]
seg_duan[5] <= time_counter:inst6.seg_duan[5]
seg_duan[6] <= time_counter:inst6.seg_duan[6]
seg_duan[7] <= time_counter:inst6.seg_duan[7]
seg_wei[0] <= time_counter:inst6.seg_wei[0]
seg_wei[1] <= time_counter:inst6.seg_wei[1]
seg_wei[2] <= time_counter:inst6.seg_wei[2]
seg_wei[3] <= time_counter:inst6.seg_wei[3]
seg_wei[4] <= time_counter:inst6.seg_wei[4]
seg_wei[5] <= time_counter:inst6.seg_wei[5]
seg_wei[6] <= time_counter:inst6.seg_wei[6]
seg_wei[7] <= time_counter:inst6.seg_wei[7]


|time|control:inst
clk => current_state.CLK
clk => start_flag_reg.CLK
clk => current_password1_temp[3].CLK
clk => current_password1_temp[2].CLK
clk => current_password1_temp[1].CLK
clk => current_password1_temp[0].CLK
clk => current_password2_temp[3].CLK
clk => current_password2_temp[2].CLK
clk => current_password2_temp[1].CLK
clk => current_password2_temp[0].CLK
clk => current_password3_temp[3].CLK
clk => current_password3_temp[2].CLK
clk => current_password3_temp[1].CLK
clk => current_password3_temp[0].CLK
clk => current_password4_temp[3].CLK
clk => current_password4_temp[2].CLK
clk => current_password4_temp[1].CLK
clk => current_password4_temp[0].CLK
clk => password_yes_temp.CLK
clk => password_no_temp.CLK
clk => password1[3].CLK
clk => password1[2].CLK
clk => password1[1].CLK
clk => password1[0].CLK
clk => password2[3].CLK
clk => password2[2].CLK
clk => password2[1].CLK
clk => password2[0].CLK
clk => password3[3].CLK
clk => password3[2].CLK
clk => password3[1].CLK
clk => password3[0].CLK
clk => password4[3].CLK
clk => password4[2].CLK
clk => password4[1].CLK
clk => password4[0].CLK
clk => motor_open~reg0.CLK
clk => password_set.CLK
clk => current_set_state.CLK
clk => current_password1[3].CLK
clk => current_password1[2].CLK
clk => current_password1[1].CLK
clk => current_password1[0].CLK
clk => current_password2[3].CLK
clk => current_password2[2].CLK
clk => current_password2[1].CLK
clk => current_password2[0].CLK
clk => current_password3[3].CLK
clk => current_password3[2].CLK
clk => current_password3[1].CLK
clk => current_password3[0].CLK
clk => current_password4[3].CLK
clk => current_password4[2].CLK
clk => current_password4[1].CLK
clk => current_password4[0].CLK
reset_n => key_counter[0].ACLR
reset_n => key_counter[1].ACLR
reset_n => key_counter[2].ACLR
reset_n => key_counter[3].ACLR
reset_n => current_password4[0].PRESET
reset_n => current_password4[1].ACLR
reset_n => current_password4[2].ACLR
reset_n => current_password4[3].ACLR
reset_n => current_password3[0].PRESET
reset_n => current_password3[1].ACLR
reset_n => current_password3[2].ACLR
reset_n => current_password3[3].ACLR
reset_n => current_password2[0].PRESET
reset_n => current_password2[1].ACLR
reset_n => current_password2[2].ACLR
reset_n => current_password2[3].ACLR
reset_n => current_password1[0].PRESET
reset_n => current_password1[1].ACLR
reset_n => current_password1[2].ACLR
reset_n => current_password1[3].ACLR
reset_n => current_set_state.ACLR
reset_n => password_set.ACLR
reset_n => start_flag_reg.ACLR
reset_n => current_state.ACLR
reset_n => password1_out~4.OUTPUTSELECT
reset_n => password1_out~5.OUTPUTSELECT
reset_n => password1_out~6.OUTPUTSELECT
reset_n => password1_out~7.OUTPUTSELECT
reset_n => password2_out~4.OUTPUTSELECT
reset_n => password2_out~5.OUTPUTSELECT
reset_n => password2_out~6.OUTPUTSELECT
reset_n => password2_out~7.OUTPUTSELECT
reset_n => password3_out~4.OUTPUTSELECT
reset_n => password3_out~5.OUTPUTSELECT
reset_n => password3_out~6.OUTPUTSELECT
reset_n => password3_out~7.OUTPUTSELECT
reset_n => password4_out~4.OUTPUTSELECT
reset_n => password4_out~5.OUTPUTSELECT
reset_n => password4_out~6.OUTPUTSELECT
reset_n => password4_out~7.OUTPUTSELECT
reset_n => ok_signal_counter[2].ACLR
reset_n => ok_signal_counter[1].ACLR
reset_n => ok_signal_counter[0].ACLR
reset_n => current_password1_temp[3].ACLR
reset_n => current_password1_temp[2].ACLR
reset_n => current_password1_temp[1].ACLR
reset_n => current_password1_temp[0].ACLR
reset_n => current_password2_temp[3].ACLR
reset_n => current_password2_temp[2].ACLR
reset_n => current_password2_temp[1].ACLR
reset_n => current_password2_temp[0].ACLR
reset_n => current_password3_temp[3].ACLR
reset_n => current_password3_temp[2].ACLR
reset_n => current_password3_temp[1].ACLR
reset_n => current_password3_temp[0].ACLR
reset_n => current_password4_temp[3].ACLR
reset_n => current_password4_temp[2].ACLR
reset_n => current_password4_temp[1].ACLR
reset_n => current_password4_temp[0].ACLR
reset_n => password_yes_temp.ACLR
reset_n => password_no_temp.PRESET
reset_n => password1[3].ACLR
reset_n => password1[2].ACLR
reset_n => password1[1].ACLR
reset_n => password1[0].ACLR
reset_n => password2[3].ACLR
reset_n => password2[2].ACLR
reset_n => password2[1].ACLR
reset_n => password2[0].ACLR
reset_n => password3[3].ACLR
reset_n => password3[2].ACLR
reset_n => password3[1].ACLR
reset_n => password3[0].ACLR
reset_n => password4[3].ACLR
reset_n => password4[2].ACLR
reset_n => password4[1].ACLR
reset_n => password4[0].ACLR
reset_n => motor_open~reg0.PRESET
set_signal => password_set~0.DATAB
select_signal => start_flag_reg~1.DATAA
select_signal => key_counter[3].CLK
select_signal => key_counter[2].CLK
select_signal => key_counter[1].CLK
select_signal => key_counter[0].CLK
ok_signal => ok_signal_counter[2].CLK
ok_signal => ok_signal_counter[1].CLK
ok_signal => ok_signal_counter[0].CLK
set_ok_signal => password_set~0.DATAA
set_ok_signal => current_password4~3.OUTPUTSELECT
set_ok_signal => current_password4~2.OUTPUTSELECT
set_ok_signal => current_password4~1.OUTPUTSELECT
set_ok_signal => current_password4~0.OUTPUTSELECT
set_ok_signal => current_password3~3.OUTPUTSELECT
set_ok_signal => current_password3~2.OUTPUTSELECT
set_ok_signal => current_password3~1.OUTPUTSELECT
set_ok_signal => current_password3~0.OUTPUTSELECT
set_ok_signal => current_password2~3.OUTPUTSELECT
set_ok_signal => current_password2~2.OUTPUTSELECT
set_ok_signal => current_password2~1.OUTPUTSELECT
set_ok_signal => current_password2~0.OUTPUTSELECT
set_ok_signal => current_password1~3.OUTPUTSELECT
set_ok_signal => current_password1~2.OUTPUTSELECT
set_ok_signal => current_password1~1.OUTPUTSELECT
set_ok_signal => current_password1~0.OUTPUTSELECT
fm_time_over => start_flag_reg~0.DATAA
fm_20 => ok_signal_counter~3.OUTPUTSELECT
fm_20 => ok_signal_counter~4.OUTPUTSELECT
fm_20 => ok_signal_counter~5.OUTPUTSELECT
fm_20 => password4~3.OUTPUTSELECT
fm_20 => password4~2.OUTPUTSELECT
fm_20 => password4~1.OUTPUTSELECT
fm_20 => password4~0.OUTPUTSELECT
fm_20 => password3~3.OUTPUTSELECT
fm_20 => password3~2.OUTPUTSELECT
fm_20 => password3~1.OUTPUTSELECT
fm_20 => password3~0.OUTPUTSELECT
fm_20 => password2~3.OUTPUTSELECT
fm_20 => password2~2.OUTPUTSELECT
fm_20 => password2~1.OUTPUTSELECT
fm_20 => password2~0.OUTPUTSELECT
fm_20 => password_no_temp~2.OUTPUTSELECT
fm_20 => password_yes_temp~2.OUTPUTSELECT
fm_20 => motor_open~2.OUTPUTSELECT
fm_20 => password1~7.OUTPUTSELECT
fm_20 => password1~6.OUTPUTSELECT
fm_20 => password1~5.OUTPUTSELECT
fm_20 => password1~4.OUTPUTSELECT
fm_20 => current_password1_temp[3].ENA
fm_20 => current_password1_temp[2].ENA
fm_20 => current_password1_temp[1].ENA
fm_20 => current_password1_temp[0].ENA
fm_20 => current_password2_temp[3].ENA
fm_20 => current_password2_temp[2].ENA
fm_20 => current_password2_temp[1].ENA
fm_20 => current_password2_temp[0].ENA
fm_20 => current_password3_temp[3].ENA
fm_20 => current_password3_temp[2].ENA
fm_20 => current_password3_temp[1].ENA
fm_20 => current_password3_temp[0].ENA
fm_20 => current_password4_temp[3].ENA
fm_20 => current_password4_temp[2].ENA
fm_20 => current_password4_temp[1].ENA
fm_20 => current_password4_temp[0].ENA
password1_out[0] <= password1_out~7.DB_MAX_OUTPUT_PORT_TYPE
password1_out[1] <= password1_out~6.DB_MAX_OUTPUT_PORT_TYPE
password1_out[2] <= password1_out~5.DB_MAX_OUTPUT_PORT_TYPE
password1_out[3] <= password1_out~4.DB_MAX_OUTPUT_PORT_TYPE
password2_out[0] <= password2_out~7.DB_MAX_OUTPUT_PORT_TYPE
password2_out[1] <= password2_out~6.DB_MAX_OUTPUT_PORT_TYPE
password2_out[2] <= password2_out~5.DB_MAX_OUTPUT_PORT_TYPE
password2_out[3] <= password2_out~4.DB_MAX_OUTPUT_PORT_TYPE
password3_out[0] <= password3_out~7.DB_MAX_OUTPUT_PORT_TYPE
password3_out[1] <= password3_out~6.DB_MAX_OUTPUT_PORT_TYPE
password3_out[2] <= password3_out~5.DB_MAX_OUTPUT_PORT_TYPE
password3_out[3] <= password3_out~4.DB_MAX_OUTPUT_PORT_TYPE
password4_out[0] <= password4_out~7.DB_MAX_OUTPUT_PORT_TYPE
password4_out[1] <= password4_out~6.DB_MAX_OUTPUT_PORT_TYPE
password4_out[2] <= password4_out~5.DB_MAX_OUTPUT_PORT_TYPE
password4_out[3] <= password4_out~4.DB_MAX_OUTPUT_PORT_TYPE
ok_signal_counter_out[0] <= ok_signal_counter[0].DB_MAX_OUTPUT_PORT_TYPE
ok_signal_counter_out[1] <= ok_signal_counter[1].DB_MAX_OUTPUT_PORT_TYPE
ok_signal_counter_out[2] <= ok_signal_counter[2].DB_MAX_OUTPUT_PORT_TYPE
motor_open <= motor_open~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_flag <= start_flag_reg.DB_MAX_OUTPUT_PORT_TYPE
password_yes <= password_yes~0.DB_MAX_OUTPUT_PORT_TYPE
password_no <= password_no~0.DB_MAX_OUTPUT_PORT_TYPE
password_set_out <= password_set.DB_MAX_OUTPUT_PORT_TYPE


|time|bell:inst1
clk => count[14].CLK
clk => count[13].CLK
clk => count[12].CLK
clk => count[11].CLK
clk => count[10].CLK
clk => count[9].CLK
clk => count[8].CLK
clk => count[7].CLK
clk => count[6].CLK
clk => count[5].CLK
clk => count[4].CLK
clk => count[3].CLK
clk => count[2].CLK
clk => count[1].CLK
clk => count[0].CLK
clk => pwm_signal.CLK
reset_n => pwm_signal.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => short_count[12].ACLR
reset_n => short_count[11].ACLR
reset_n => short_count[10].ACLR
reset_n => short_count[9].ACLR
reset_n => short_count[8].ACLR
reset_n => short_count[7].ACLR
reset_n => short_count[6].ACLR
reset_n => short_count[5].ACLR
reset_n => short_count[4].ACLR
reset_n => short_count[3].ACLR
reset_n => short_count[2].ACLR
reset_n => short_count[1].ACLR
reset_n => short_count[0].ACLR
reset_n => long_count[14].ACLR
reset_n => long_count[13].ACLR
reset_n => long_count[12].ACLR
reset_n => long_count[11].ACLR
reset_n => long_count[10].ACLR
reset_n => long_count[9].ACLR
reset_n => long_count[8].ACLR
reset_n => long_count[7].ACLR
reset_n => long_count[6].ACLR
reset_n => long_count[5].ACLR
reset_n => long_count[4].ACLR
reset_n => long_count[3].ACLR
reset_n => long_count[2].ACLR
reset_n => long_count[1].ACLR
reset_n => long_count[0].ACLR
reset_n => fm_time_over~reg0.ACLR
reset_n => pwm_en.ACLR
start_flag => pwm_en~0.OUTPUTSELECT
start_flag => fm_time_over~0.OUTPUTSELECT
start_flag => long_count~14.OUTPUTSELECT
start_flag => long_count~13.OUTPUTSELECT
start_flag => long_count~12.OUTPUTSELECT
start_flag => long_count~11.OUTPUTSELECT
start_flag => long_count~10.OUTPUTSELECT
start_flag => long_count~9.OUTPUTSELECT
start_flag => long_count~8.OUTPUTSELECT
start_flag => long_count~7.OUTPUTSELECT
start_flag => long_count~6.OUTPUTSELECT
start_flag => long_count~5.OUTPUTSELECT
start_flag => long_count~4.OUTPUTSELECT
start_flag => long_count~3.OUTPUTSELECT
start_flag => long_count~2.OUTPUTSELECT
start_flag => long_count~1.OUTPUTSELECT
start_flag => long_count~0.OUTPUTSELECT
start_flag => current_state~1.OUTPUTSELECT
start_flag => current_state~0.OUTPUTSELECT
start_flag => short_count~25.OUTPUTSELECT
start_flag => short_count~24.OUTPUTSELECT
start_flag => short_count~23.OUTPUTSELECT
start_flag => short_count~22.OUTPUTSELECT
start_flag => short_count~21.OUTPUTSELECT
start_flag => short_count~20.OUTPUTSELECT
start_flag => short_count~19.OUTPUTSELECT
start_flag => short_count~18.OUTPUTSELECT
start_flag => short_count~17.OUTPUTSELECT
start_flag => short_count~16.OUTPUTSELECT
start_flag => short_count~15.OUTPUTSELECT
start_flag => short_count~14.OUTPUTSELECT
start_flag => short_count~13.OUTPUTSELECT
fm_time_over <= fm_time_over~reg0.DB_MAX_OUTPUT_PORT_TYPE
pwm_out <= pwm_out~0.DB_MAX_OUTPUT_PORT_TYPE
fm_20 <= pwm_en.DB_MAX_OUTPUT_PORT_TYPE


|time|time_counter:inst6
clk => scan_count[13].CLK
clk => scan_count[12].CLK
clk => scan_count[11].CLK
clk => scan_count[10].CLK
clk => scan_count[9].CLK
clk => scan_count[8].CLK
clk => scan_count[7].CLK
clk => scan_count[6].CLK
clk => scan_count[5].CLK
clk => scan_count[4].CLK
clk => scan_count[3].CLK
clk => scan_count[2].CLK
clk => scan_count[1].CLK
clk => scan_count[0].CLK
clk => clk_scan.CLK
clk => seg_wei[7]~reg0.CLK
clk => seg_wei[6]~reg0.CLK
clk => seg_wei[5]~reg0.CLK
clk => seg_wei[4]~reg0.CLK
clk => seg_wei[3]~reg0.CLK
clk => seg_wei[2]~reg0.CLK
clk => seg_wei[1]~reg0.CLK
clk => seg_wei[0]~reg0.CLK
clk => seg_duan[7]~reg0.CLK
clk => seg_duan[6]~reg0.CLK
clk => seg_duan[5]~reg0.CLK
clk => seg_duan[4]~reg0.CLK
clk => seg_duan[3]~reg0.CLK
clk => seg_duan[2]~reg0.CLK
clk => seg_duan[1]~reg0.CLK
clk => seg_duan[0]~reg0.CLK
reset_n => seg_select[0].ACLR
reset_n => seg_select[1].ACLR
reset_n => seg_select[2].ACLR
reset_n => scan_count[13].ACLR
reset_n => scan_count[12].ACLR
reset_n => scan_count[11].ACLR
reset_n => scan_count[10].ACLR
reset_n => scan_count[9].ACLR
reset_n => scan_count[8].ACLR
reset_n => scan_count[7].ACLR
reset_n => scan_count[6].ACLR
reset_n => scan_count[5].ACLR
reset_n => scan_count[4].ACLR
reset_n => scan_count[3].ACLR
reset_n => scan_count[2].ACLR
reset_n => scan_count[1].ACLR
reset_n => scan_count[0].ACLR
reset_n => clk_scan.ACLR
password1_in[0] => Mux31.IN13
password1_in[0] => Mux30.IN13
password1_in[0] => Mux29.IN13
password1_in[0] => Mux28.IN13
password1_in[0] => Mux27.IN13
password1_in[0] => Mux26.IN13
password1_in[0] => Mux25.IN13
password1_in[1] => Mux31.IN12
password1_in[1] => Mux30.IN12
password1_in[1] => Mux29.IN12
password1_in[1] => Mux28.IN12
password1_in[1] => Mux27.IN12
password1_in[1] => Mux26.IN12
password1_in[1] => Mux25.IN12
password1_in[1] => Mux24.IN7
password1_in[2] => Mux31.IN11
password1_in[2] => Mux30.IN11
password1_in[2] => Mux29.IN11
password1_in[2] => Mux28.IN11
password1_in[2] => Mux27.IN11
password1_in[2] => Mux26.IN11
password1_in[2] => Mux25.IN11
password1_in[2] => Mux24.IN6
password1_in[3] => Mux31.IN10
password1_in[3] => Mux30.IN10
password1_in[3] => Mux29.IN10
password1_in[3] => Mux28.IN10
password1_in[3] => Mux27.IN10
password1_in[3] => Mux26.IN10
password1_in[3] => Mux25.IN10
password1_in[3] => Mux24.IN5
password2_in[0] => Mux23.IN13
password2_in[0] => Mux22.IN13
password2_in[0] => Mux21.IN13
password2_in[0] => Mux20.IN13
password2_in[0] => Mux19.IN13
password2_in[0] => Mux18.IN13
password2_in[0] => Mux17.IN13
password2_in[1] => Mux23.IN12
password2_in[1] => Mux22.IN12
password2_in[1] => Mux21.IN12
password2_in[1] => Mux20.IN12
password2_in[1] => Mux19.IN12
password2_in[1] => Mux18.IN12
password2_in[1] => Mux17.IN12
password2_in[1] => Mux16.IN7
password2_in[2] => Mux23.IN11
password2_in[2] => Mux22.IN11
password2_in[2] => Mux21.IN11
password2_in[2] => Mux20.IN11
password2_in[2] => Mux19.IN11
password2_in[2] => Mux18.IN11
password2_in[2] => Mux17.IN11
password2_in[2] => Mux16.IN6
password2_in[3] => Mux23.IN10
password2_in[3] => Mux22.IN10
password2_in[3] => Mux21.IN10
password2_in[3] => Mux20.IN10
password2_in[3] => Mux19.IN10
password2_in[3] => Mux18.IN10
password2_in[3] => Mux17.IN10
password2_in[3] => Mux16.IN5
password3_in[0] => Mux15.IN13
password3_in[0] => Mux14.IN13
password3_in[0] => Mux13.IN13
password3_in[0] => Mux12.IN13
password3_in[0] => Mux11.IN13
password3_in[0] => Mux10.IN13
password3_in[0] => Mux9.IN13
password3_in[1] => Mux15.IN12
password3_in[1] => Mux14.IN12
password3_in[1] => Mux13.IN12
password3_in[1] => Mux12.IN12
password3_in[1] => Mux11.IN12
password3_in[1] => Mux10.IN12
password3_in[1] => Mux9.IN12
password3_in[1] => Mux8.IN7
password3_in[2] => Mux15.IN11
password3_in[2] => Mux14.IN11
password3_in[2] => Mux13.IN11
password3_in[2] => Mux12.IN11
password3_in[2] => Mux11.IN11
password3_in[2] => Mux10.IN11
password3_in[2] => Mux9.IN11
password3_in[2] => Mux8.IN6
password3_in[3] => Mux15.IN10
password3_in[3] => Mux14.IN10
password3_in[3] => Mux13.IN10
password3_in[3] => Mux12.IN10
password3_in[3] => Mux11.IN10
password3_in[3] => Mux10.IN10
password3_in[3] => Mux9.IN10
password3_in[3] => Mux8.IN5
password4_in[0] => Mux7.IN13
password4_in[0] => Mux6.IN13
password4_in[0] => Mux5.IN13
password4_in[0] => Mux4.IN13
password4_in[0] => Mux3.IN13
password4_in[0] => Mux2.IN13
password4_in[0] => Mux1.IN13
password4_in[1] => Mux7.IN12
password4_in[1] => Mux6.IN12
password4_in[1] => Mux5.IN12
password4_in[1] => Mux4.IN12
password4_in[1] => Mux3.IN12
password4_in[1] => Mux2.IN12
password4_in[1] => Mux1.IN12
password4_in[1] => Mux0.IN7
password4_in[2] => Mux7.IN11
password4_in[2] => Mux6.IN11
password4_in[2] => Mux5.IN11
password4_in[2] => Mux4.IN11
password4_in[2] => Mux3.IN11
password4_in[2] => Mux2.IN11
password4_in[2] => Mux1.IN11
password4_in[2] => Mux0.IN6
password4_in[3] => Mux7.IN10
password4_in[3] => Mux6.IN10
password4_in[3] => Mux5.IN10
password4_in[3] => Mux4.IN10
password4_in[3] => Mux3.IN10
password4_in[3] => Mux2.IN10
password4_in[3] => Mux1.IN10
password4_in[3] => Mux0.IN5
ok_signal_counter_in[0] => Mux39.IN13
ok_signal_counter_in[0] => Mux38.IN13
ok_signal_counter_in[0] => Mux37.IN13
ok_signal_counter_in[0] => Mux36.IN13
ok_signal_counter_in[0] => Mux35.IN13
ok_signal_counter_in[0] => Mux34.IN13
ok_signal_counter_in[0] => Mux33.IN13
ok_signal_counter_in[1] => Mux39.IN12
ok_signal_counter_in[1] => Mux38.IN12
ok_signal_counter_in[1] => Mux37.IN12
ok_signal_counter_in[1] => Mux36.IN12
ok_signal_counter_in[1] => Mux35.IN12
ok_signal_counter_in[1] => Mux34.IN12
ok_signal_counter_in[1] => Mux33.IN12
ok_signal_counter_in[1] => Mux32.IN7
ok_signal_counter_in[2] => Mux39.IN11
ok_signal_counter_in[2] => Mux38.IN11
ok_signal_counter_in[2] => Mux37.IN11
ok_signal_counter_in[2] => Mux36.IN11
ok_signal_counter_in[2] => Mux35.IN11
ok_signal_counter_in[2] => Mux34.IN11
ok_signal_counter_in[2] => Mux33.IN11
ok_signal_counter_in[2] => Mux32.IN6
seg_duan[0] <= seg_duan[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[1] <= seg_duan[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[2] <= seg_duan[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[3] <= seg_duan[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[4] <= seg_duan[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[5] <= seg_duan[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[6] <= seg_duan[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[7] <= seg_duan[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[0] <= seg_wei[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[1] <= seg_wei[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[2] <= seg_wei[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[3] <= seg_wei[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[4] <= seg_wei[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[5] <= seg_wei[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[6] <= seg_wei[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[7] <= seg_wei[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


