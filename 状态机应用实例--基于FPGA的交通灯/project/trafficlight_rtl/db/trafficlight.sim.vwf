/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2005 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 120000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("red1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("green1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("yellow1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("red2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("green2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("yellow2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120000000000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 120000;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("CLK1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5985401460.0;
		LEVEL 1 FOR 1897810220.0;
		LEVEL 0 FOR 3357664230.0;
		LEVEL 1 FOR 1605839420.0;
		LEVEL 0 FOR 107153284670.0;
	}
}

TRANSITION_LIST("red1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500500000.0;
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 4484901460.0;
		LEVEL 1 FOR 5515098540.0;
		LEVEL 0 FOR 30000000000.0;
		LEVEL 1 FOR 26000000000.0;
		LEVEL 0 FOR 35000000000.0;
		LEVEL 1 FOR 17499500000.0;
	}
}

TRANSITION_LIST("green1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500500000.0;
		LEVEL 1 FOR 4484901460.0;
		LEVEL 0 FOR 5515098540.0;
		LEVEL 1 FOR 25000000000.0;
		LEVEL 0 FOR 31000000000.0;
		LEVEL 1 FOR 30000000000.0;
		LEVEL 0 FOR 22499500000.0;
	}
}

TRANSITION_LIST("yellow1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 36500500000.0;
		LEVEL 1 FOR 5000000000.0;
		LEVEL 0 FOR 56000000000.0;
		LEVEL 1 FOR 5000000000.0;
		LEVEL 0 FOR 17499500000.0;
	}
}

TRANSITION_LIST("red2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500500000.0;
		LEVEL 1 FOR 41000000000.0;
		LEVEL 0 FOR 26000000000.0;
		LEVEL 1 FOR 35000000000.0;
		LEVEL 0 FOR 17499500000.0;
	}
}

TRANSITION_LIST("green2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 41500500000.0;
		LEVEL 1 FOR 20000000000.0;
		LEVEL 0 FOR 41000000000.0;
		LEVEL 1 FOR 17499500000.0;
	}
}

TRANSITION_LIST("yellow2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61500500000.0;
		LEVEL 1 FOR 6000000000.0;
		LEVEL 0 FOR 52499500000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "red1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "green1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "yellow1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "red2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "green2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "yellow2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 20600;
	MASTER = TRUE;
}
;
