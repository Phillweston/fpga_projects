|trafficlight
red1 <= state_machine:inst3.red1_out
clk => state_machine:inst3.clk
clk => clk_div:inst.clk
clk => seg:inst1.clk
reset_n => state_machine:inst3.reset_n
reset_n => clk_div:inst.reset_n
reset_n => seg:inst1.reset_n
hold => state_machine:inst3.hold
select_model => state_machine:inst3.select_model
green1 <= state_machine:inst3.green1_out
yellow1 <= state_machine:inst3.yellow1_out
red2 <= state_machine:inst3.red2_out
green2 <= state_machine:inst3.green2_out
yellow2 <= state_machine:inst3.yellow2_out
seg_duan[0] <= seg:inst1.seg_duan[0]
seg_duan[1] <= seg:inst1.seg_duan[1]
seg_duan[2] <= seg:inst1.seg_duan[2]
seg_duan[3] <= seg:inst1.seg_duan[3]
seg_duan[4] <= seg:inst1.seg_duan[4]
seg_duan[5] <= seg:inst1.seg_duan[5]
seg_duan[6] <= seg:inst1.seg_duan[6]
seg_duan[7] <= seg:inst1.seg_duan[7]
seg_wei[0] <= seg:inst1.seg_wei[0]
seg_wei[1] <= seg:inst1.seg_wei[1]
seg_wei[2] <= seg:inst1.seg_wei[2]
seg_wei[3] <= seg:inst1.seg_wei[3]


|trafficlight|state_machine:inst3
clk => ~NO_FANOUT~
reset_n => second_count_shi_reg[0].ACLR
reset_n => second_count_shi_reg[1].ACLR
reset_n => second_count_shi_reg[2].ACLR
reset_n => second_count_shi_reg[3].ACLR
reset_n => second_count_ge_reg[0].ACLR
reset_n => second_count_ge_reg[1].ACLR
reset_n => second_count_ge_reg[2].ACLR
reset_n => second_count_ge_reg[3].ACLR
reset_n => red1~1.IN0
reset_n => second_count_ge[3].ACLR
reset_n => second_count_ge[2].ACLR
reset_n => second_count_ge[1].ACLR
reset_n => second_count_ge[0].PRESET
reset_n => second_count_shi[3].ACLR
reset_n => second_count_shi[2].ACLR
reset_n => second_count_shi[1].ACLR
reset_n => second_count_shi[0].ACLR
hold => next_state.s0~0.OUTPUTSELECT
hold => next_state.s1~0.OUTPUTSELECT
hold => next_state.s2~0.OUTPUTSELECT
hold => next_state.s3~0.OUTPUTSELECT
hold => next_state.s4~0.OUTPUTSELECT
hold => red1~1.IN1
hold => second_count_ge_reg[3].ENA
hold => second_count_ge_reg[2].ENA
hold => second_count_ge_reg[1].ENA
hold => second_count_ge_reg[0].ENA
hold => second_count_shi_reg[3].ENA
hold => second_count_shi_reg[2].ENA
hold => second_count_shi_reg[1].ENA
hold => second_count_shi[0].ENA
hold => second_count_shi_reg[0].ENA
hold => second_count_ge[3].ENA
hold => second_count_ge[2].ENA
hold => second_count_ge[1].ENA
hold => second_count_ge[0].ENA
hold => second_count_shi[3].ENA
hold => second_count_shi[2].ENA
hold => second_count_shi[1].ENA
clk_1hz => second_count_ge_reg[3].CLK
clk_1hz => second_count_ge_reg[2].CLK
clk_1hz => second_count_ge_reg[1].CLK
clk_1hz => second_count_ge_reg[0].CLK
clk_1hz => second_count_shi_reg[3].CLK
clk_1hz => second_count_shi_reg[2].CLK
clk_1hz => second_count_shi_reg[1].CLK
clk_1hz => second_count_shi_reg[0].CLK
clk_1hz => countnum[5].CLK
clk_1hz => countnum[4].CLK
clk_1hz => countnum[3].CLK
clk_1hz => countnum[2].CLK
clk_1hz => countnum[1].CLK
clk_1hz => countnum[0].CLK
clk_1hz => red1.CLK
clk_1hz => green1.CLK
clk_1hz => yellow1.CLK
clk_1hz => red2.CLK
clk_1hz => green2.CLK
clk_1hz => yellow2.CLK
clk_1hz => second_count_ge[3].CLK
clk_1hz => second_count_ge[2].CLK
clk_1hz => second_count_ge[1].CLK
clk_1hz => second_count_ge[0].CLK
clk_1hz => second_count_shi[3].CLK
clk_1hz => second_count_shi[2].CLK
clk_1hz => second_count_shi[1].CLK
clk_1hz => second_count_shi[0].CLK
select_model => second_count_shi~19.DATAB
select_model => second_count_ge~17.DATAB
select_model => second_count_ge~16.DATAB
second_count_ge_out[0] <= second_count_ge_reg[0].DB_MAX_OUTPUT_PORT_TYPE
second_count_ge_out[1] <= second_count_ge_reg[1].DB_MAX_OUTPUT_PORT_TYPE
second_count_ge_out[2] <= second_count_ge_reg[2].DB_MAX_OUTPUT_PORT_TYPE
second_count_ge_out[3] <= second_count_ge_reg[3].DB_MAX_OUTPUT_PORT_TYPE
second_count_shi_out[0] <= second_count_shi_reg[0].DB_MAX_OUTPUT_PORT_TYPE
second_count_shi_out[1] <= second_count_shi_reg[1].DB_MAX_OUTPUT_PORT_TYPE
second_count_shi_out[2] <= second_count_shi_reg[2].DB_MAX_OUTPUT_PORT_TYPE
second_count_shi_out[3] <= second_count_shi_reg[3].DB_MAX_OUTPUT_PORT_TYPE
red1_out <= red1.DB_MAX_OUTPUT_PORT_TYPE
green1_out <= green1.DB_MAX_OUTPUT_PORT_TYPE
yellow1_out <= yellow1.DB_MAX_OUTPUT_PORT_TYPE
red2_out <= red2.DB_MAX_OUTPUT_PORT_TYPE
green2_out <= green2.DB_MAX_OUTPUT_PORT_TYPE
yellow2_out <= yellow2.DB_MAX_OUTPUT_PORT_TYPE


|trafficlight|clk_div:inst
clk => clk_1hz.CLK
clk => count[24].CLK
clk => count[23].CLK
clk => count[22].CLK
clk => count[21].CLK
clk => count[20].CLK
clk => count[19].CLK
clk => count[18].CLK
clk => count[17].CLK
clk => count[16].CLK
clk => count[15].CLK
clk => count[14].CLK
clk => count[13].CLK
clk => count[12].CLK
clk => count[11].CLK
clk => count[10].CLK
clk => count[9].CLK
clk => count[8].CLK
clk => count[7].CLK
clk => count[6].CLK
clk => count[5].CLK
clk => count[4].CLK
clk => count[3].CLK
clk => count[2].CLK
clk => count[1].CLK
clk => count[0].CLK
reset_n => clk_1hz.ACLR
reset_n => count[24].ACLR
reset_n => count[23].ACLR
reset_n => count[22].ACLR
reset_n => count[21].ACLR
reset_n => count[20].ACLR
reset_n => count[19].ACLR
reset_n => count[18].ACLR
reset_n => count[17].ACLR
reset_n => count[16].ACLR
reset_n => count[15].ACLR
reset_n => count[14].ACLR
reset_n => count[13].ACLR
reset_n => count[12].ACLR
reset_n => count[11].ACLR
reset_n => count[10].ACLR
reset_n => count[9].ACLR
reset_n => count[8].ACLR
reset_n => count[7].ACLR
reset_n => count[6].ACLR
reset_n => count[5].ACLR
reset_n => count[4].ACLR
reset_n => count[3].ACLR
reset_n => count[2].ACLR
reset_n => count[1].ACLR
reset_n => count[0].ACLR
clk_1hz_out <= clk_1hz.DB_MAX_OUTPUT_PORT_TYPE


|trafficlight|seg:inst1
clk => scan_count[13].CLK
clk => scan_count[12].CLK
clk => scan_count[11].CLK
clk => scan_count[10].CLK
clk => scan_count[9].CLK
clk => scan_count[8].CLK
clk => scan_count[7].CLK
clk => scan_count[6].CLK
clk => scan_count[5].CLK
clk => scan_count[4].CLK
clk => scan_count[3].CLK
clk => scan_count[2].CLK
clk => scan_count[1].CLK
clk => scan_count[0].CLK
clk => clk_scan.CLK
clk => seg_wei[3]~reg0.CLK
clk => seg_wei[2]~reg0.CLK
clk => seg_wei[1]~reg0.CLK
clk => seg_wei[0]~reg0.CLK
clk => seg_duan[7]~reg0.CLK
clk => seg_duan[6]~reg0.CLK
clk => seg_duan[5]~reg0.CLK
clk => seg_duan[4]~reg0.CLK
clk => seg_duan[3]~reg0.CLK
clk => seg_duan[2]~reg0.CLK
clk => seg_duan[1]~reg0.CLK
clk => seg_duan[0]~reg0.CLK
reset_n => seg_select[0].ACLR
reset_n => seg_select[1].ACLR
reset_n => scan_count[13].ACLR
reset_n => scan_count[12].ACLR
reset_n => scan_count[11].ACLR
reset_n => scan_count[10].ACLR
reset_n => scan_count[9].ACLR
reset_n => scan_count[8].ACLR
reset_n => scan_count[7].ACLR
reset_n => scan_count[6].ACLR
reset_n => scan_count[5].ACLR
reset_n => scan_count[4].ACLR
reset_n => scan_count[3].ACLR
reset_n => scan_count[2].ACLR
reset_n => scan_count[1].ACLR
reset_n => scan_count[0].ACLR
reset_n => clk_scan.ACLR
second_count_ge[0] => Mux7.IN13
second_count_ge[0] => Mux6.IN13
second_count_ge[0] => Mux5.IN13
second_count_ge[0] => Mux4.IN13
second_count_ge[0] => Mux3.IN13
second_count_ge[0] => Mux2.IN13
second_count_ge[0] => Mux1.IN13
second_count_ge[1] => Mux7.IN12
second_count_ge[1] => Mux6.IN12
second_count_ge[1] => Mux5.IN12
second_count_ge[1] => Mux4.IN12
second_count_ge[1] => Mux3.IN12
second_count_ge[1] => Mux2.IN12
second_count_ge[1] => Mux1.IN12
second_count_ge[1] => Mux0.IN7
second_count_ge[2] => Mux7.IN11
second_count_ge[2] => Mux6.IN11
second_count_ge[2] => Mux5.IN11
second_count_ge[2] => Mux4.IN11
second_count_ge[2] => Mux3.IN11
second_count_ge[2] => Mux2.IN11
second_count_ge[2] => Mux1.IN11
second_count_ge[2] => Mux0.IN6
second_count_ge[3] => Mux7.IN10
second_count_ge[3] => Mux6.IN10
second_count_ge[3] => Mux5.IN10
second_count_ge[3] => Mux4.IN10
second_count_ge[3] => Mux3.IN10
second_count_ge[3] => Mux2.IN10
second_count_ge[3] => Mux1.IN10
second_count_ge[3] => Mux0.IN5
second_count_shi[0] => Mux15.IN13
second_count_shi[0] => Mux14.IN13
second_count_shi[0] => Mux13.IN13
second_count_shi[0] => Mux12.IN13
second_count_shi[0] => Mux11.IN13
second_count_shi[0] => Mux10.IN13
second_count_shi[0] => Mux9.IN13
second_count_shi[1] => Mux15.IN12
second_count_shi[1] => Mux14.IN12
second_count_shi[1] => Mux13.IN12
second_count_shi[1] => Mux12.IN12
second_count_shi[1] => Mux11.IN12
second_count_shi[1] => Mux10.IN12
second_count_shi[1] => Mux9.IN12
second_count_shi[1] => Mux8.IN7
second_count_shi[2] => Mux15.IN11
second_count_shi[2] => Mux14.IN11
second_count_shi[2] => Mux13.IN11
second_count_shi[2] => Mux12.IN11
second_count_shi[2] => Mux11.IN11
second_count_shi[2] => Mux10.IN11
second_count_shi[2] => Mux9.IN11
second_count_shi[2] => Mux8.IN6
second_count_shi[3] => Mux15.IN10
second_count_shi[3] => Mux14.IN10
second_count_shi[3] => Mux13.IN10
second_count_shi[3] => Mux12.IN10
second_count_shi[3] => Mux11.IN10
second_count_shi[3] => Mux10.IN10
second_count_shi[3] => Mux9.IN10
second_count_shi[3] => Mux8.IN5
seg_duan[0] <= seg_duan[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[1] <= seg_duan[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[2] <= seg_duan[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[3] <= seg_duan[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[4] <= seg_duan[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[5] <= seg_duan[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[6] <= seg_duan[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_duan[7] <= seg_duan[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[0] <= seg_wei[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[1] <= seg_wei[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[2] <= seg_wei[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_wei[3] <= seg_wei[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


